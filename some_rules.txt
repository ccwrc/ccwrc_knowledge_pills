
DRY (Don’t Repeat Yourself)
Nie powtarzaj się. Wydziel powtarzające się fragmenty kodu np. do funkcji, unikaj stosowania 'magicznych'
liczb/stringów w kodzie, zamiast tego wykorzystuj stałe.

GRASP (General Responsibility Assignment Software Principles)
http://www.blog.molitorys.pl/wzorce-projektowe-czyli-zasady-dobrego-programowania

KISS (Keep It Simple, Stupid)
Bez Udziwnień Zapisu, Idioto (BUZI). Pisz prosto i zrozumiale.

LoD (Law of Demeter)
Nie rozmawiaj z obcymi. Rozmawiaj tylko z przyjaciółmi.Co to znaczy? 
Metoda obiektu powinna wywoływać metody tylko od: swojego obiektu, argumentu przekazanego do metody, 
obiektu stworzonego wewnątrz tej metody, bezpośredniego pola obiektu.
Np. nie powinno się stosować wywołań typu A.getB().getC().getD.getName().

POLA (Principle Of Least Astonishment)
Zasada najmniejszego zaskoczenia. Element systemu (funkcja, klasa, interfejs, komenda itp.) powinny działać tak, 
jak naturalnie spodziewałby się tego jego użytkownik.

SLAP (Single Level of Abstraction Principle)
Każda linia kodu w metodzie powinna mieć ten sam poziom abstrakcji (należy unikać mieszania ze sobą wysoko i niskopoziomowych detali)

SoC (Separation of Concerns)
Żadna klasa naszego programu nie powinna dzielić odpowiedzialności z innymi klasami w naszym programie. 
Chodzi o to, aby każda klasa miała oddzielne zmartwienia i nie musiała martwić się o zadania klas pobocznych. 
Wszystkie klasy powinny być zaś rozłączne i osobliwe.

SOLID
http://itcraftsman.pl/solidny-jak-solid-pisanie-solidnych-aplikacji-w-jezyku-c/

TDA (Tell Don’t Ask)
Powinniśmy mówić naszym obiektom jakie są ich obowiązki (zadania do wykonania) a nie pytać w jakim są stanie. 
Zasada ta również pomaga nam unikać niepotrzebnych powiązań pomiędzy obiektami naszych klas.
http://itcraftsman.pl/powiedz-nie-pytaj-czyli-prawo-demeter/

Tworzenie nazw
http://itcraftsman.pl/dobre-praktyki-tworzenia-nazw/
https://kobietydokodu.pl/niezbednik-juniora-dobre-praktyki-dla-poczatkujacego-programisty/

YAGNI (You Ain’t Gonna Need It)
Nie potrzebujesz tego teraz, to nie pisz tego teraz. Nie zmuszaj innych do czytania niepotrzebnych rzeczy.

Yoda contitions
zamiast: if($someVar == 1) {}
powinno być: if(1 == $someVar) {}
Dzięki temu nigdy nie przypiszemy wartości 1 zmiennej $someVar w przypadku pomyłki i ustawienia jednego
znaku '='. Od razu także zostanie zgłoszony błąd, co oszczędza debugowania w przyszłości.


